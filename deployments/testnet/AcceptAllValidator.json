{
  "address": "0x628AE20554C9BbaaCd47C40205AC878EC62f1b84",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "previousRoundId",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "previousAnswer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "currentRoundId",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "currentAnswer",
          "type": "int256"
        }
      ],
      "name": "validate",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x27d3e881c6bde3d48d7a6270188f2383e4b48d7aea2fe0f0ce6d0d49f6481b5d",
  "receipt": {
    "to": null,
    "from": "0xd107AC5e5830BB95f880cA3b1270ccCdAA0A3c5e",
    "contractAddress": "0x628AE20554C9BbaaCd47C40205AC878EC62f1b84",
    "transactionIndex": 1,
    "gasUsed": "90815",
    "logsBloom": "0x00000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000800000000000000000000100000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000000000000000000200000000000000020000000000010000001000000000000000000000000004000000000000000000001000000000000000000000000000000100000000000000000000000080000000000000000000000000000000000000000800000100000",
    "blockHash": "0x2781800522ce4a66e38f54ed7c8cb09a8aeac1cf868bd575f3cc312c2c80fe9c",
    "transactionHash": "0x27d3e881c6bde3d48d7a6270188f2383e4b48d7aea2fe0f0ce6d0d49f6481b5d",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 29920838,
        "transactionHash": "0x27d3e881c6bde3d48d7a6270188f2383e4b48d7aea2fe0f0ce6d0d49f6481b5d",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000d107ac5e5830bb95f880ca3b1270cccdaa0a3c5e",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000009766be1eb0ce00000000000000000000000000000000000000000000000006594de5dbc173240000000000000000000000000000000000000000000018886bf5fbed0934854f0000000000000000000000000000000000000000000000000658b67f1da2c2560000000000000000000000000000000000000000000018886bf69353c753361d",
        "logIndex": 6,
        "blockHash": "0x2781800522ce4a66e38f54ed7c8cb09a8aeac1cf868bd575f3cc312c2c80fe9c"
      }
    ],
    "blockNumber": 29920838,
    "cumulativeGasUsed": "239340",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "dad340f4fcb6e4311ea159c3c3c357ed",
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"previousRoundId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"previousAnswer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"currentRoundId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"currentAnswer\",\"type\":\"int256\"}],\"name\":\"validate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{},\"title\":\"The Accept All Validator contract\"},\"userdoc\":{\"methods\":{},\"notice\":\"This contract accepts all values submitted and should be considered a 'skip validation' contract used by FluxAggregator\"}},\"settings\":{\"compilationTarget\":{\"contracts/utils/AcceptAllValidator.sol\":\"AcceptAllValidator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.6/interfaces/AggregatorValidatorInterface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.6.0;\\n\\ninterface AggregatorValidatorInterface {\\n  function validate(\\n    uint256 previousRoundId,\\n    int256 previousAnswer,\\n    uint256 currentRoundId,\\n    int256 currentAnswer\\n  ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9403d756c0e628ea0886db03668ec0a9a9b8cb8c781a57da68d05fb5f1faf976\"},\"contracts/utils/AcceptAllValidator.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\npragma solidity 0.6.6;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.6/interfaces/AggregatorValidatorInterface.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title The Accept All Validator contract\\r\\n * @notice This contract accepts all values submitted and should be considered a\\r\\n * 'skip validation' contract used by FluxAggregator\\r\\n */\\r\\ncontract AcceptAllValidator is AggregatorValidatorInterface {\\r\\n    function validate(\\r\\n        uint256 previousRoundId,\\r\\n        int256 previousAnswer,\\r\\n        uint256 currentRoundId,\\r\\n        int256 currentAnswer\\r\\n    ) external override returns (bool) {\\r\\n        return true;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x524c32e6512a08c0fbf0b6437babeec088e0f2f6cdbde3ac2893f8a7cef35af1\"}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b5060ad8061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063beed9b5114602d575b600080fd5b605960048036036080811015604157600080fd5b5080359060208101359060408101359060600135606d565b604080519115158252519081900360200190f35b600194935050505056fea2646970667358221220eeef9ef3539f16ccbfbbf6fd018aaa5d010c0e976c6a0ff41d36e11628c24d0d64736f6c63430006060033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c8063beed9b5114602d575b600080fd5b605960048036036080811015604157600080fd5b5080359060208101359060408101359060600135606d565b604080519115158252519081900360200190f35b600194935050505056fea2646970667358221220eeef9ef3539f16ccbfbbf6fd018aaa5d010c0e976c6a0ff41d36e11628c24d0d64736f6c63430006060033",
  "devdoc": {
    "methods": {},
    "title": "The Accept All Validator contract"
  },
  "userdoc": {
    "methods": {},
    "notice": "This contract accepts all values submitted and should be considered a 'skip validation' contract used by FluxAggregator"
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}